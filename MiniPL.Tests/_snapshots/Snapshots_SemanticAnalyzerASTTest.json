{
  "Program1": {
    "AutoGenerated": "[StatementList\n  [Assignment Int\n    [Variable Int\n      [X]\n    ]\n    [BinaryOp +\n      [Literal Int\n        [4]\n      ]\n      [BinaryOp *\n        [Literal Int\n          [6]\n        ]\n        [Literal Int\n          [2]\n        ]\n      ]\n    ]\n  ]\n  [StatementList\n    [Statement\n      [print]\n      [Variable Int\n        [X]\n      ]\n    ]\n    [NoOp]\n  ]\n]\n"
  },
  "Program2": {
    "AutoGenerated": "[StatementList\n  [Assignment Int\n    [Variable Int\n      [nTimes]\n    ]\n    [Literal Int\n      [0]\n    ]\n  ]\n  [StatementList\n    [Statement\n      [print]\n      [Literal String\n        [How many times?]\n      ]\n    ]\n    [StatementList\n      [Statement\n        [read]\n        [Variable Int\n          [nTimes]\n        ]\n      ]\n      [StatementList\n        [Assignment Int\n          [Variable Int\n            [x]\n          ]\n          [NoOp]\n        ]\n        [StatementList\n          [For\n            [Variable Int\n              [x]\n            ]\n            [Literal Int\n              [0]\n            ]\n            [BinaryOp -\n              [Variable Int\n                [nTimes]\n              ]\n              [Literal Int\n                [1]\n              ]\n            ]\n            [StatementList\n              [Statement\n                [print]\n                [Variable Int\n                  [x]\n                ]\n              ]\n              [StatementList\n                [Statement\n                  [print]\n                  [Literal String\n                    [ : Hello, World!\n]\n                  ]\n                ]\n                [NoOp]\n              ]\n            ]\n          ]\n          [StatementList\n            [Statement\n              [assert]\n              [BinaryOp =\n                [Variable Int\n                  [x]\n                ]\n                [Variable Int\n                  [nTimes]\n                ]\n              ]\n            ]\n            [NoOp]\n          ]\n        ]\n      ]\n    ]\n  ]\n]\n"
  },
  "Program3": {
    "AutoGenerated": "[StatementList\n  [Statement\n    [print]\n    [Literal String\n      [Give a number: ]\n    ]\n  ]\n  [StatementList\n    [Assignment Int\n      [Variable Int\n        [n]\n      ]\n      [NoOp]\n    ]\n    [StatementList\n      [Statement\n        [read]\n        [Variable Int\n          [n]\n        ]\n      ]\n      [StatementList\n        [Assignment Int\n          [Variable Int\n            [v]\n          ]\n          [Literal Int\n            [1]\n          ]\n        ]\n        [StatementList\n          [Assignment Int\n            [Variable Int\n              [i]\n            ]\n            [NoOp]\n          ]\n          [StatementList\n            [For\n              [Variable Int\n                [i]\n              ]\n              [Literal Int\n                [1]\n              ]\n              [Variable Int\n                [n]\n              ]\n              [StatementList\n                [Assignment Int\n                  [Variable Int\n                    [v]\n                  ]\n                  [BinaryOp *\n                    [Variable Int\n                      [v]\n                    ]\n                    [Variable Int\n                      [i]\n                    ]\n                  ]\n                ]\n                [NoOp]\n              ]\n            ]\n            [StatementList\n              [Statement\n                [print]\n                [Literal String\n                  [The result is: ]\n                ]\n              ]\n              [StatementList\n                [Statement\n                  [print]\n                  [Variable Int\n                    [v]\n                  ]\n                ]\n                [StatementList\n                  [Statement\n                    [assert]\n                    [UnaryOp !\n                      [BinaryOp <\n                        [Variable Int\n                          [v]\n                        ]\n                        [Literal Int\n                          [0]\n                        ]\n                      ]\n                    ]\n                  ]\n                  [NoOp]\n                ]\n              ]\n            ]\n          ]\n        ]\n      ]\n    ]\n  ]\n]\n"
  }
}